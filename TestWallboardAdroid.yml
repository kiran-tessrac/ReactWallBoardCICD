# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  - group: WallBoard
  - name: configuration
    value: 'Release'
  - name: sdk
    value: 'iphoneos'
  - name: major 
    value: 1
  - name: minor
    value: 1
  - name : versioncode
    value: 0
  - name: androidVersionCode
    value: $[counter(variables['versioncode']),50)]
  - name: offset
    value: 0
  - name: revision
    value : $[counter(format('{0}.{1}', variables['major'],variables['minor']),0)]
  
name: '$(major).$(minor).$(revision)'
pool:
  vmImage: 'macOS-10.14'


steps:
 - bash: echo 'androidVersionCode'
# - task: NodeTool@0
#   displayName: 'Install Node'
#   inputs:
#     versionSpec: '12.16.1'

# - script: npm install  
#   displayName: 'Install node dependencies'

# - script: npx jetify
#   displayName: 'Install jetify' 

# - script: npm install react-native-locale-listener
#   displayName: "Install native locale"  

# - task: Gradle@2
#   inputs:
#     workingDirectory: 'android/'
#     gradleWrapperFile: 'android/gradlew'
#     gradleOptions: '-Xmx3072m'
#     publishJUnitResults: false
#     testResultsFiles: '**/TEST-*.xml'
#     tasks: 'bundleRelease'

# - task: AndroidSigning@3
#   inputs:
#     apkFiles: '**/*.aab'      
#     apksignerKeystoreFile: 'WallboardMachines.jks'
#     apksign: true
#     apksignerArguments: --min-sdk-version 23
#     apksignerKeystorePassword: '$(jarsignerKeystorePassword)'
#     apksignerKeystoreAlias: '$(MYAPP_UPLOAD_KEY_ALIAS)'
#     apksignerKeyPassword: '$(jarsignerKeyPassword)'
#     zipalign: false

# - script: mv android/app/build/outputs/bundle/release/app-release.aab WallBoard$(Build.BuildNumber).aab
#   displayName: 'Rename apk'
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: WallBoard$(Build.BuildNumber).aab
#     artifactName: drop
#     publishLocation: 'container'
 


